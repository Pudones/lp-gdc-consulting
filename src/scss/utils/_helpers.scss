@use '../utils/variables';
@use '../utils/fonts';
@use '../utils/mixins';

// Positions
.relative {
  position: relative;
}

// Medidas
.mb-5 {
  margin-bottom: 5px;
}

.mb-10 {
  margin-bottom: 10px;
}

.mb-15 {
  margin-bottom: 15px;
}

.mb-20 {
  margin-bottom: 20px;
}

.mb-25 {
  margin-bottom: 25px;
}

.mb-30 {
  margin-bottom: 30px;
}

.mb-35 {
  margin-bottom: 35px;
}

.mb-40 {
  margin-bottom: 40px;
}

.mb-45 {
  margin-bottom: 45px;
}

.mb-50 {
  margin-bottom: 50px;
}

.pad-40 {
  padding: 40px;
}

.pad-80 {
  padding: 80px;
}

// Texto
.line23 {
  line-height: 23px;
}

.line26 {
  line-height: 26px;
}

.line30 {
  line-height: 30px;
}

.line36 {
  line-height: 36px;
}
.line36-d {
  @include mixins.forLargeScreen {
    line-height: 36px;
  }
}

.line38 {
  line-height: 38px;
}

.line43 {
  line-height: 43px;
}
.line43-d {
  @include mixins.forLargeScreen {
    line-height: 43px;
  }
}

.ls4 {
  letter-spacing: 0.4px;
}

.text-center {
  text-align: center;
}

.text-center-d {
  @include mixins.forLargeScreen {
    text-align: center;
  }
}

.text-shadow-15 {
  text-shadow: 0 1px 4px rgba(0, 0, 0, .15);
}

.text-light {
  font-weight: 300;
}

.text-regular {
  font-weight: 400;
}

.text-500 {
  font-weight: 500;
}

.text-bold {
  font-weight: 700;
}

.text-italic {
  font-style: italic;
}

.f-white {
  color: variables.$white;
}

.fD-white {
  @include mixins.forLargeScreen {
    color: variables.$white;
  }
}

.f-gold {
  color: variables.$gold;
}

.fD-gold {
  @include mixins.forLargeScreen {
    color: variables.$gold;
  }
}

.roboto {
  font-family: 'RobotoCondensed';
}


// Overlay
.overlay {
  position: absolute;
  top: 0;
  bottom: 0;
  right: 0;
  left: 0;
  background-color: rgba(0, 0, 0, 0.4);
}


// Other
.zin1 {
  z-index: 1;
}

.prevent-select {
  user-select: none;
}

.prevent-pointer {
  pointer-events: none;
}


// Eachs

@each $fs,
$value in variables.$font-size {
  .#{$fs} {
    font-size: $value;
  }

  @include mixins.forLargeScreen {
    .#{$fs}-d {
      font-size: $value;
    }
  }
}

@each $color,
$value in variables.$color {
  .color-#{$color} {
    color: $value;
  }
}